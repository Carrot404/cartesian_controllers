<launch>
        <!-- Load robot_description to parameter server -->
        <param name="/robot_description"
        command="$(find xacro)/xacro.py '$(find cartesian_controller_test)/robot.urdf.xacro'" />

        <!-- Load empty gazebo -->
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
                <arg name="world_name" default="worlds/empty.world"/>
                <arg name="paused" value="true"/>
                <arg name="gui" value="false"/>
        </include>

        <!-- Spawn robot in gazebo in good testing pose -->
        <node name="spawn_gazebo_model"
                pkg="gazebo_ros"
                type="spawn_model"
                respawn="false"
                output="screen"
                args="-urdf -param robot_description -model robot -z 0.1
                -J shoulder_pan_joint 0.15
                -J shoulder_lift_joint -1.75
                -J elbow_joint 1.5
                -J wrist_1_joint -1.4
                -J wrist_2_joint -1.6
                -J wrist_3_joint 0.0
                -unpause"
                />

        <!-- Robot state publisher -->
        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
                <param name="publish_frequency" type="double" value="50.0" />
                <param name="tf_prefix" type="string" value="" />
        </node>

        <!-- Joint state publisher -->
        <node name="joint_state_controller_spawner" pkg="controller_manager" type="spawner" args="joint_state_controller" respawn="false" output="screen"/>

        <!-- Load controller configuration -->
        <rosparam file="$(find cartesian_controller_test)/controller.yaml" command="load" />

        <!-- Spawn controllers. The controller manager is loaded separately through a gazebo plugin -->
        <node name="controller_spawner" pkg="controller_manager" type="spawner" args="--stopped my_cartesian_motion_controller joint_trajectory_controller" />

        <!-- Testing tool for tf publishing -->
        <node pkg="tf_publisher_gui" type="tf_publisher_gui" name="tf_publisher_gui" output="screen">
                <param name="parent_frame" value="testing_ref" />
                <param name="child_frame" value="my_target" />
                <param name="rate" value="100.0" />
        </node>

        <!-- Visualization -->
        <arg name="my_rviz" value="-d $(find cartesian_controller_test)/test.rviz" />
        <node name="rviz" pkg="rviz" type="rviz" respawn="false" args="$(arg my_rviz)" output="screen" >
        </node>
</launch>
